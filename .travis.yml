language: php

dist: trusty

sudo: required

services:
  - docker

cache:
  yarn: true
  directories:
    - admin/node_modules
    - client/node_modules

# If you want to use multi branch deployment or branch naming, set MULTI_BRANCH value to 1 and set your DEPLOYMENT_BRANCH.
# Don't forget to change the repo name to fit your needs.
# Check that all needed travis environment variables are set.
before_install:
  - ./ci/check_ci_env_vars.sh
  - source ./ci/.env

before_script:
  - phpenv config-rm xdebug.ini
  - sudo service mysql stop
  - sudo service postgresql stop
  - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash -s -- --version v2.9.1;

script:
  - ./ci/test.sh

# Get kubectl and make it executable
# Create the travis service account access file from travis environment variables
# Connect to the project as travis service account by gcloud using the travis service account access file we just created above and configure project.
# Create the needed bucket in which to push builds.
before_deploy:
  - ./ci/check_ci_env_vars.sh
  - ./ci/build_image.sh php
  - ./ci/build_image.sh nginx
  - ./ci/build_image.sh varnish

# Deploy images and buckets according to the current context, create or update Kubenetes release with updated informations.
deploy:
  - provider: script
    script: bash ci/deploy.sh
    skip_cleanup: true
    on:
      branch: "${DEPLOYMENT_BRANCH}"
      repo: "${REPOSITORY}"
      condition: "${CURRENT_CI} == travis && ${DEPLOYMENT} == 1"
  - provider: script
    script:
      ./ci/admin_deploy.sh;
      ./ci/client_deploy.sh;
    skip_cleanup: true
    on:
      repo: "${REPOSITORY}"
      condition: "${CURRENT_CI} == travis && ${DEPLOYMENT} == 1"

