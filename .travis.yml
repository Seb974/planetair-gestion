sudo: required

services:
    - docker

before_script:
  # Disable services enabled by default
  - sudo service mysql stop
  - sudo service postgresql stop
  - wget https://kubernetes-helm.storage.googleapis.com/helm-v2.6.1-linux-amd64.tar.gz
  - tar xzf helm-v2.6.1-linux-amd64.tar.gz
  - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

script:
  - docker-compose up -d
  - linux-amd64/helm lint api/helm/api/
  - sleep 20
  - docker-compose exec php composer install -o -n
  - docker-compose exec php bin/console security:check
  - docker-compose exec php bin/console doctrine:schema:validate --skip-sync
  - docker-compose exec php bin/console doctrine:schema:drop --force
  - docker-compose exec php bin/console doctrine:schema:create
  - docker-compose exec php bin/console hautelook:fixtures:load -n
  - docker-compose exec php bin/console doctrine:schema:drop --env=test --force
  - docker-compose exec php bin/console cache:warmup --env=test
  - docker-compose exec php bin/behat
  - curl http://localhost # Client
  - curl http://localhost:81 # Admin
  - curl http://localhost:8080 # API
  - curl http://localhost:8081 # Varnish
  - curl -k https://localhost # Client (HTTP/2)
  - curl -k https://localhost:444 # Admin (HTTP/2)
  - curl -k https://localhost:8443 # API (HTTP/2)
  - curl -k https://localhost:8444 # Varnish (HTTP/2)

deploy:
  - provider: gcs
    access_key_id: "GCS Interoperable Access Key ID"
    secret_access_key: "GCS Interoperable Access Secret"
    bucket: "GCS Bucket"
    acl: public-read
    local-dir: admin
      on:
        branch: master
  - provider: gcs
      access_key_id: "GCS Interoperable Access Key ID"
      secret_access_key: "GCS Interoperable Access Secret"
      bucket: "GCS Bucket"
      acl: public-read
      local-dir: client
        on:
          branch: master
  # deploy master to production
  - provider: script
    script: api/bin/deploy.sh
    on:
      branch: master
