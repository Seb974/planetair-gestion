language: php

dist: trusty
sudo: required

services:
  - docker

cache:
  yarn: true
  directories:
    - admin/node_modules
    - client/node_modules

env:
  global:
    - APP_ENV=prod

# - if [ "TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi
before_install:
  - curl -O https://storage.googleapis.com/kubernetes-helm/helm-v2.7.2-linux-amd64.tar.gz
  - tar -zxvf helm-v2.7.2-linux-amd64.tar.gz

before_script:
  - sudo service mysql stop
  - sudo service postgresql stop
  - npm install -g react-scripts
  - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

script:
  - docker-compose up -d
  - linux-amd64/helm lint api/helm/api/
  - sleep 20
  - docker-compose exec php composer install -o -n
  - docker-compose exec php bin/console security:check
  - docker-compose exec php bin/console doctrine:schema:validate --skip-sync
  - docker-compose exec php bin/console doctrine:schema:drop --force
  - docker-compose exec php bin/console doctrine:schema:create
  - docker-compose exec php bin/console hautelook:fixtures:load -n
  - docker-compose exec php bin/console doctrine:schema:drop --env=test --force
  - docker-compose exec php bin/console cache:warmup --env=test
  - docker-compose exec php bin/behat
  - curl http://localhost
  - curl http://localhost:81
  - curl http://localhost:8080
  - curl http://localhost:8081
  - curl -k https://localhost
  - curl -k https://localhost:444
  - curl -k https://localhost:8443
  - curl -k https://localhost:8444

# Todo: remove ingress output
after_success:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - echo -n ${travis} | base64 -d > travis-service-account.json
  - gcloud auth activate-service-account travis@api-platform-demo-209807.iam.gserviceaccount.com --key-file travis-service-account.json --project=api-platform-demo-209807
  - gcloud config set compute/zone europe-west3-c
  - gcloud config set project api-platform-demo-209807
  - tar -zxvf helm-v2.7.2-linux-amd64.tar.gz
  - rm -rf helm-v2.7.2-linux-amd64.tar.gz
  - sudo mv linux-amd64/helm /usr/local/bin/helm
  - gcloud container clusters get-credentials api-platform-demo --zone europe-west3-c --project ${projectName}
  - helm init
  - helm dependencies update ./api/helm/api
  - docker build --pull -t gcr.io/api-platform-demo-209807/php -t gcr.io/api-platform-demo-209807/php:latest api --target api_platform_php
  - docker build --pull -t gcr.io/api-platform-demo-209807/nginx -t gcr.io/api-platform-demo-209807/nginx:latest api --target api_platform_nginx
  - docker build --pull -t gcr.io/api-platform-demo-209807/varnish -t gcr.io/api-platform-demo-209807/varnish:latest api --target api_platform_varnish
  - gcloud docker -- push gcr.io/api-platform-demo-209807/php
  - gcloud docker -- push gcr.io/api-platform-demo-209807/nginx
  - gcloud docker -- push gcr.io/api-platform-demo-209807/varnish
  - helm install --wait --namespace=${TRAVIS_COMMIT} ./api/helm/api --set php.repository=gcr.io/api-platform-demo-209807/php --set nginx.repository=gcr.io/api-platform-demo-209807/nginx --set secret=${APP_SECRET} --set postgresUser=${DATABASE_USER},postgresPassword="${DATABASE_PASSWORD}",postgresDatabase=${DATABASE_NAME} --set postgresql.persistence.enabled=true --set corsAllowOrigin='*'
  - sleep 60
  - kubectl get po --namespace=${TRAVIS_COMMIT}
  - kubectl --namespace=${TRAVIS_COMMIT} get pods -l app=api-php -o jsonpath="{.items[0].metadata.name}"
  - kubectl exec -it $(kubectl --namespace=${TRAVIS_COMMIT} get pods -l app=api-php -o jsonpath="{.items[0].metadata.name}") --namespace=${TRAVIS_COMMIT} -- ash -c 'export APP_ENV=dev && composer install -n && bin/console d:s:u --force --env=dev && bin/console hautelook:fixtures:load -n && APP_ENV=prod composer --no-dev install --classmap-authoritative && bin/console d:s:u --env=prod'
  - kubectl delete namespace $(kubectl get namespaces -l app=api-demo -o jsonpath="{.items[0].metadata.name}" --ignore-not-found) --ignore-not-found
  - kubectl label namespace ${TRAVIS_COMMIT} app=api-demo
  - kubectl --namespace $(kubectl get namespaces -l app=api-demo -o jsonpath="{.items[0].metadata.name}") get ingress -o jsonpath="{.items[0].status.loadBalancer.ingress[0].ip}"
  - rm travis-service-account.json
  - gcloud auth revoke travis@api-platform-demo-209807.iam.gserviceaccount.com
